from typing import List
from flask import Flask, render_template, request, redirect, url_for
from models import db, User, Article
from flask_migrate import Migrate
from forms import ArticleForm
from flask_bootstrap import Bootstrap
from flask_simplemde import SimpleMDE
import json

app = Flask(__name__)
Bootstrap(app)
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///data.sqlite'
app.config['SECRET_KEY'] = 'AWWWWW'
app.config['SIMPLEMDE_JS_IIFE'] = True
app.config['SIMPLEMDE_USE_CDN'] = True
db.app = app
db.init_app(app)
migrate = Migrate(app, db)
SimpleMDE(app)


# –ì–ª–∞–≤–Ω–∞—è
@app.route('/')
def master():
    articles: List[Article] = Article.query.all()
    return render_template('index.html',
                           title="–ê—Å–ø–µ–∫—Ç",
                           articles=articles)


# –í—Ö–æ–¥
@app.route('/auth')
def auth():
    return render_template('auth.html', title="–í—Ö–æ–¥")


# –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@app.route('/admin')
def admin_panel():
    data = {'time': 1619017803724, 'blocks': [{'type': 'header', 'data': {'text': '–ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–∫—Å—Ç–∞', 'level': 1}}, {'type': 'paragraph', 'data': {'text': '–ê —ç—Ç–æ —É–∂–µ –æ–±—ã—á–Ω—ã–π –∞–±–∑–∞—Ü'}}, {'type': 'header', 'data': {'text': '–ù–µ —Ç–∞–∫–æ–π –∫—Ä—É—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –Ω–æ —Ç–æ–∂–µ –Ω–∏—á–µ–≥–æ', 'level': 3}}, {'type': 'list', 'data': {'style': 'unordered', 'items': ['–≠—Ç–∞ —à—Ç—É–∫–∞ —Ç–æ–∂–µ –æ–≥–æ–Ω—åüî•üî•üî•', '–ó–≤–∞—Ç—å –Ω–µ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫', '–£–¥–æ–±–Ω–æ —á—Ç–æ-—Ç–æ —Ç—É—Ç –ø–µ—Ä–µ—á–∏—Å–ª—è—Ç—å']}}, {'type': 'delimiter', 'data': {}}, {'type': 'paragraph', 'data': {'text': '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –º–Ω–æ–≥–æ —á–µ–≥–æ –Ω–∞–≤–æ—Ä–æ—Ç–∏—Ç—å. –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–∏–≥—Ä–∞—Ç—å—Å—è —Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æüòè'}}, {'type': 'image', 'data': {'url': 'static/img/content.png', 'caption': '–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏', 'withBorder': True, 'withBackground': False, 'stretched': False}}], 'version': '2.20.2'}

    return render_template('admin.html', title='–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', data=data)


# ==–†–ê–ë–û–¢–ê –° –°–¢–ê–¢–¨–Ø–ú–ò==
# –ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏
@app.route('/articles/<int:article_id>')
def get_article(article_id):
    articles: Article = Article.query.filter_by(id=article_id).first()
    return render_template('article.html', title=articles.title, articles=articles)


# –ù–∞–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
@app.route('/articles/new/<int:article_id>', methods=('GET', 'POST'))
def new_article(article_id):
    # form = ArticleForm()
    # if request.method == 'POST':
    #     title = form.title.data
    #     body = form.body.data
    #     article = Article(title=title, body=body, user=User.query.first())
    #     db.session.add(article)
    #     db.session.commit()
    #     return redirect(url_for('get_article', article_id=article.id))
    # return render_template('new_article.html', form=form)
    if request.method == 'POST':
        results = json.loads(request.data)
        print(results)
        return json.dumps(results)
    with open('file.json', 'w') as f:
        json.dump(request.form, f)
    return render_template('new_article.html')


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
@app.route('/articles/<int:article_id>/edit', methods=["GET", "POST"])
def edit_article(article_id):
    form = ArticleForm()
    article = Article.query.filter_by(id=article_id).first()

    if form.validate_on_submit():
        article.title = form.title.data
        article.body = form.body.data
        db.session.add(article)
        db.session.commit()
        return redirect(url_for("get_article", article_id=article.id))

    form.title.data = article.title
    form.body.data = article.body
    return render_template('edit_article.html', form=form)


# –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π
@app.route('/search')
def search_article():
    q = request.args.get('q', '')
    articles: List[Article] = Article.query.filter(Article.title.like(f'%{q}%') | Article.body.like(f'%{q}%')).all()
    return render_template('index.html',
                           title='–ê—Å–ø–µ–∫—Ç',
                           articles=articles)


# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    app.run()
